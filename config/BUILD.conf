#!/bin/bash
#
#
# Copyright © 2024 Quintor B.V.
#
# BCLD is gelicentieerd onder de EUPL, versie 1.2 of
# – zodra ze zullen worden goedgekeurd door de Europese Commissie -
# latere versies van de EUPL (de "Licentie");
# U mag BCLD alleen gebruiken in overeenstemming met de licentie.
# U kunt een kopie van de licentie verkrijgen op:
#
# https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
#
# Tenzij vereist door de toepasselijke wetgeving of overeengekomen in
# schrijven, wordt software onder deze licentie gedistribueerd
# gedistribueerd op een "AS IS"-basis,
# ZONDER ENIGE GARANTIES OF VOORWAARDEN, zowel
# expliciet als impliciet.
# Zie de licentie voor de specifieke taal die van toepassing is
# en de beperkingen van de licentie.
#
#
# Copyright © 2024 Quintor B.V.
#
# BCLD is licensed under the EUPL, Version 1.2 or 
# – as soon they will be approved by the European Commission -
# subsequent versions of the EUPL (the "Licence");
# You may not use BCLD except in compliance with the Licence.
# You may obtain a copy of the License at:
#
# https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
#
# Unless required by applicable law or agreed to in
# writing, software distributed under the License is
# distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied.
# See the License for the specific language governing
# permissions and limitations under the License.
# 
#
# REQUIRED BUILD ENVs
#
# AGENT ENVs:
# BCLD_APP='/opt/deb-app-afname'
# BCLD_CFG_EDIT=<String to include in bcld.cfg>
# BCLD_MODEL=[release, debug, test]
# BCLD_NVIDIA='true'
# BCLD_PKG_EXTRA=<extra packages to include>
# BCLD_TAG_EXTRA=<filename postfix>
# KEEP_BOOTSTRAP='true'
# NULLFIX='true'
#
# SECRETS:
# BCLD_SECRET=<password for TEST>
#
# BUILD ENVs:
export APP_DIR="./app/${BCLD_MODEL^^}"
export BCLD_ARCH='amd64'
export BCLD_CODE_NAME='Argonath'
export BCLD_DATE="$(/usr/bin/date +'%d-%b-%Y')"
export BCLD_DEFAULT_URL='https://www.google.com/'
export BCLD_HOME='/root'
export BCLD_MD5="./test/bcld.md5"
export BCLD_PATCH='0' # Changes with every major feature update
export BCLD_RELEASE='14.0'
export BCLD_REPO_BRANCH='main'
export BCLD_TERM='xterm-256color'
export BCLD_TRUSTARGS="u,u,u"
export CODE_NAME='noble' # focal, bionic, jammy
export DEBIAN_FRONTEND=noninteractive
export DEBIAN_PRIORITY=critical
export DEFAULT_APP="(/usr/bin/qutebrowser &) && /usr/bin/qutebrowser :tab-close"
export FAT_LABEL="BCLD-USB"
export HOME='/root'
export KERNEL_MINOR='6.8'
export KERNEL_MODEL='generic'
export KERNEL_PATCH='0-31'
export LC_ALL="C"
export NVIDIA_DRIVER="535"
export REPO_NAME="${BCLD_CODE_NAME^^}-${BCLD_RELEASE}-${BCLD_PATCH}"
export {TEMP,TMP,TMPDIR}='/tmp' # Temporary folders
export TZ=Etc/UTC # Many users dual boot BCLD
export UBUNTU_RELEASE='24.04' # 20.04, 22.04, 24.04
export UBUNTU_REPO="http://archive.ubuntu.com/ubuntu/" # Where the live build gets its packages
export UBUNTU_URL="http://cdimage.ubuntu.com/ubuntu-base/releases/24.04/release/ubuntu-base-24.04.1-base-amd64.tar.gz" # Ubuntu Base location
export WEB_DIR="/var/www/html"

## GENERATED ENVs
#  DO NOT CHANGE THESE
export BCLD_APP="${BCLD_APP:-${DEFAULT_APP}}"
export BCLD_RUN="$(/usr/bin/basename "${BCLD_APP}" | /usr/bin/cut -d ' ' -f1 | /usr/bin/cut -d '_' -f1)"
export BCLD_USER="${BCLD_CODE_NAME,,}-${BCLD_MODEL}"
export KERNEL_SHORT="${KERNEL_MINOR}.${KERNEL_PATCH}"
export KERNEL_VERSION="${KERNEL_SHORT}-${KERNEL_MODEL}"

## Export BCLD_VERSION_FILE (file name) & BCLD_VERSION_STRING (build title)
#    1: ID
#    2: BCLD_TAG_EXTRA (optional)
function bcld_exports () {
    if [[ -n "${BCLD_MODEL}" ]]; then

        if [[ -n "${1}" ]] && [[ -n "${2}" ]]; then
            # BCLD_EXTRA has EXTRA TAGs        
            export BCLD_VERSION_FILE="${BCLD_DATE,,}_BCLD-${1}-${BCLD_CODE_NAME}-${BCLD_PATCH}_${BCLD_MODEL^^}_(${2})"
            export BCLD_VERSION_STRING="${BCLD_RELEASE}-${BCLD_PATCH} BCLD ${1} (${2}) ${BCLD_MODEL^} (${BCLD_CODE_NAME})"
        elif [[ -n "${1}" ]]; then            
            # Single tag for BCLD_Nvidia
            export BCLD_VERSION_FILE="${BCLD_DATE,,}_BCLD-${1}-${BCLD_CODE_NAME}-${BCLD_PATCH}_${BCLD_MODEL^^}"
            export BCLD_VERSION_STRING="${BCLD_RELEASE}-${BCLD_PATCH} BCLD ${1} ${BCLD_MODEL^} (${BCLD_CODE_NAME})"
        else
            # Generic exports (with BCLD_MODEL)
            export BCLD_VERSION_FILE="${BCLD_DATE,,}_BCLD-${BCLD_CODE_NAME}-${BCLD_PATCH}_${BCLD_MODEL^^}"
	        export BCLD_VERSION_STRING="${BCLD_RELEASE}-${BCLD_PATCH} BCLD ${BCLD_MODEL^} (${BCLD_CODE_NAME})"
        fi
    else
        # Generic exports (no BCLD_MODEL or BCLD_TAG_EXTRA)
        export BCLD_VERSION_FILE="${BCLD_DATE,,}_BCLD-${BCLD_CODE_NAME}-${BCLD_PATCH}"
	    export BCLD_VERSION_STRING="${BCLD_RELEASE}-${BCLD_PATCH} BCLD (${BCLD_CODE_NAME})"
    fi
}

# If BCLD_MODEL is set, it is likely due to a build
if [[ -n "${BCLD_TAG_EXTRA}" ]]; then
    # Exports for BCLD EXTRA
    bcld_exports 'Extra' "${BCLD_TAG_EXTRA}"
elif [[ "${BCLD_NVIDIA}" == 'true' ]]; then
    # Exports for BCLD Nvidia
    bcld_exports 'Nvidia'
elif [[ ! -d "${APP_DIR}" ]]; then
    # If ./app does not exist
    bcld_exports 'Vendorless'
else
    # Default exports
    bcld_exports
fi

## Export BCLD_NEXUS_STRING (Nexus output)
# Uses BCLD_VERSION_FILE (file name)
# Prepends BCLD_REPO and Nexus directory structure
if [[ ${BCLD_BRANCH} = 'main' ]]; then
    export BCLD_NEXUS_STRING="${BCLD_REPO}/${BCLD_CODE_NAME}/${BCLD_VERSION_FILE}(${BCLD_BUILD}).img"
else
    export BCLD_NEXUS_STRING="${BCLD_REPO}/${BCLD_BRANCH}/${BCLD_VERSION_FILE}(${BCLD_BUILD}).img"
fi
