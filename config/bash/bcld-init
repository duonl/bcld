#!/bin/bash
#
# Copyright © 2024 Quintor B.V.
#
# BCLD is gelicentieerd onder de EUPL, versie 1.2 of
# – zodra ze zullen worden goedgekeurd door de Europese Commissie -
# latere versies van de EUPL (de "Licentie");
# U mag BCLD alleen gebruiken in overeenstemming met de licentie.
# U kunt een kopie van de licentie verkrijgen op:
#
# https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
#
# Tenzij vereist door de toepasselijke wetgeving of overeengekomen in
# schrijven, wordt software onder deze licentie gedistribueerd
# gedistribueerd op een "AS IS"-basis,
# ZONDER ENIGE GARANTIES OF VOORWAARDEN, zowel
# expliciet als impliciet.
# Zie de licentie voor de specifieke taal die van toepassing is
# en de beperkingen van de licentie.
#
#
# Copyright © 2024 Quintor B.V.
#
# BCLD is licensed under the EUPL, Version 1.2 or 
# – as soon they will be approved by the European Commission -
# subsequent versions of the EUPL (the "Licence");
# You may not use BCLD except in compliance with the Licence.
# You may obtain a copy of the License at:
#
# https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
#
# Unless required by applicable law or agreed to in
# writing, software distributed under the License is
# distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied.
# See the License for the specific language governing
# permissions and limitations under the License.
# 
#
# BCLD Startup
# Very essential script for the BCLD client, which contains most of the
# configurations necessary before booting the online webkiosk.
#
# This script is the heart of BCLD and where BCLD will boot the Chromium
# Node webapp after configuring the network, audio, video and other
# hardware settings.
#
#
# Script for running root operations prior to launching BCLD Startup script
## Set only if empty
source /etc/environment
source /usr/bin/log_tools.sh

# ENVs
TAG='BCLD-INIT'

BCLD_MACHINE_ID="$(/usr/bin/cat /etc/machine-id | /usr/bin/cut -c 1-12)"
CMD_LINE=$(/usr/bin/cat /proc/cmdline)
ENVIRONMENT='/etc/environment'

# Find a random MAC address on the system, filter virtual interfaces
BCLD_MAC_RANDOM="$(/usr/bin/find /sys/devices/* -type f -name 'address' | /usr/bin/grep 'net' | /usr/bin/grep -v -m1 'lo')"

# Generate hash if found
if [[ -f "${BCLD_MAC_RANDOM}" ]]; then
    BCLD_HASH="$(/usr/bin/sed "s/://g" "${BCLD_MAC_RANDOM}")"
fi

# FUNCTIONS

## Function to set hostname before running BCLD startup script
function bcld_set_hostname () {

	log_item 'Configuring hostname...'

	log_item "Changing hostname to ${1}..."
			
	# New hostname
	/usr/bin/hostnamectl set-hostname "${1}"
	
	/usr/bin/sed -i "s/127.0.0.1 localhost/127.0.0.1 ${1}/" /etc/hosts &> /dev/null
	/usr/bin/sed -i "s/127.0.1.1 //" /etc/hosts &> /dev/null
	
	# Relog with new hostname
	exit
}

# EXE

log_header 'Starting BCLD-INIT script'

## First, set the machine-id
if [[ ! -f /etc/machine-id ]] || [[ -z "${BCLD_MACHINE_ID}" ]]; then
    log_first "MACHINE_ID not set! Setting: "
    /usr/bin/systemd-machine-id-setup || exit 1
fi

## Set local time
log_item "Setting RTC to local time..."
/usr/bin/timedatectl set-local-rtc 1

## Send BCLD_VENDOR to /etc/environment
function vendor_env () {

    export BCLD_VENDOR="${1}"

    /usr/bin/echo "BCLD_VENDOR=${1}" >> "${ENVIRONMENT}"
}

## Set BCLD_VENDOR with parameter
## Loop through CMD_LINE.
for KERNEL_PARAM in ${CMD_LINE}; do
    
    # Match only VENDOR_PARAM.
    if [[ $KERNEL_PARAM == 'bcld.afname.vendor*' ]]; then
        # Strip the BCLD_VENDOR and give it to a new export
        KERNEL_PARAM=$(/usr/bin/echo "${KERNEL_PARAM}" | /usr/bin/sed 's/=/ /')
        IFS=' ' read -r NAME VALUE <<< "${KERNEL_PARAM}"
        vendor_env "${VALUE}"
        break
    fi
done

# If BCLD_VENDOR is still empty, autodetect
if [[ "$(/usr/bin/grep -c 'BCLD_VENDOR=' "${ENVIRONMENT}")" -eq 0 ]]; then
    
    log_item "BCLD_VENDOR not set in ${ENVIRONMENT}..."
	
	# If BCLD App found, default to 'facet'
	## Source bcld_vendor.sh script for BCLD_OPTS and NSSDB exports using BCLD_VENDOR
	if [[ -x /opt/deb-app-afname ]]; then
	    log_item 'Setting to default: FACET'
	    vendor_env 'facet'
	    source /usr/bin/bcld_vendor.sh
    else
        # Without a Facet Chrome app, we are likely running Vendorless BCLD
        log_item 'BCLD App not found, setting to: VENDORLESS BCLD'
	    vendor_env 'vendorless'
	    source /usr/bin/bcld_vendor.sh
	fi
else
	# If already set, display
	log_item "BCLD_VENDOR set to: $(/usr/bin/grep 'BCLD_VENDOR=' "${ENVIRONMENT}")"
fi

# After setting the machine-id, BCLD_VENDOR, BCLD_MAC_RANDOM and BCLD_HASH, set the hostname
if [[ "$(/usr/bin/hostname)" == 'localhost.localdomain' ]] || [[ "$(/usr/bin/hostname)" == 'localhost' ]]; then
    
    if [[ -n "${BCLD_HASH}" ]]; then
        # Pick hostname based on generated BCLD_HASH
        log_item "Physical interfaces detected..."
        bcld_set_hostname "${BCLD_VENDOR}-${BCLD_HASH}"
    else
        # Pick hostname based on machine-id otherwise
        log_item "No physical interfaces detected... Using machine-id."
        bcld_set_hostname "${BCLD_VENDOR}-${BCLD_MACHINE_ID}"
    fi

else
    # If the default hostname is changed, keep it
    log_item "Hostname already appears to be changed: $(/usr/bin/hostname)"
fi

## Allow password only for TEST, since only TEST has SSH
if [[ "${BCLD_MODEL}" == 'test' ]] \
    && [[ -f "${BCLD_TEST}" ]]; then
    log_last 'Setting BCLD remote SSH password...'
    /usr/sbin/usermod \
        --password "$(/usr/bin/echo ${BCLD_SECRET} | /usr/bin/openssl passwd -1 -stdin)" \
        "${BCLD_USER}"
fi

# Exit and allow relog
exit
